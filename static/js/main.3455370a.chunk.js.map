{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","regexp","NewMovie","state","errorTitle","errorImgUrl","errorImdbUrl","errorImdbId","handleSetTitle","e","setState","target","value","handleSetDescription","handleSetImgUrl","handleSetImdbUrl","handleSetImdbId","resetForm","hasErrorTitle","prev","nextState","trim","hasErrorImgUrl","test","hasErrorimdbUrl","hasErrorImdbId","handleSubmit","preventDefault","props","addMovie","this","disableButton","onSubmit","htmlFor","type","cn","hasError","id","onChange","onBlur","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3455370a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport cn from 'classnames';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line\nconst regexp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n\n    errorTitle: '',\n    errorImgUrl: '',\n    errorImdbUrl: '',\n    errorImdbId: '',\n  };\n\n  handleSetTitle = (e) => {\n    this.setState({\n      title: e.target.value,\n      errorTitle: '',\n    });\n  }\n\n  handleSetDescription = (e) => {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  handleSetImgUrl = (e) => {\n    this.setState({\n      imgUrl: e.target.value,\n      errorImgUrl: '',\n    });\n  }\n\n  handleSetImdbUrl = (e) => {\n    this.setState({\n      imdbUrl: e.target.value,\n      errorImdbUrl: '',\n    });\n  }\n\n  handleSetImdbId = (e) => {\n    this.setState({\n      imdbId: e.target.value,\n      errorImdbId: '',\n    });\n  }\n\n  resetForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n\n      errorTitle: '',\n      errorImgUrl: '',\n      errorImdbUrl: '',\n      errorImdbId: '',\n    });\n  }\n\n  hasErrorTitle = () => {\n    this.setState((prev) => {\n      const nextState = {};\n\n      if (prev.title.trim() === '') {\n        nextState.errorTitle = true;\n      }\n\n      return nextState;\n    });\n  }\n\n  hasErrorImgUrl = () => {\n    this.setState((prev) => {\n      const nextState = {};\n\n      if (!regexp.test(prev.imgUrl)) {\n        nextState.errorImgUrl = true;\n      }\n\n      return nextState;\n    });\n  }\n\n  hasErrorimdbUrl = () => {\n    this.setState((prev) => {\n      const nextState = {};\n\n      if (!regexp.test(prev.imdbUrl)) {\n        nextState.errorImdbUrl = true;\n      }\n\n      return nextState;\n    });\n  }\n\n  hasErrorImdbId = () => {\n    this.setState((prev) => {\n      const nextState = {};\n\n      if (prev.imdbId.trim() === '') {\n        nextState.errorImdbId = true;\n      }\n\n      return nextState;\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.state.title.trim() !== ''\n      && regexp.test(this.state.imgUrl)\n      && regexp.test(this.state.imdbUrl)\n      && this.state.imdbId.trim() !== '') {\n      this.props.addMovie(\n        this.state.title,\n        this.state.description,\n        this.state.imgUrl,\n        this.state.imdbUrl,\n        this.state.imdbId,\n      );\n\n      this.resetForm();\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errorTitle,\n      errorImgUrl,\n      errorImdbUrl,\n      errorImdbId,\n    } = this.state;\n\n    const disableButton = errorTitle === ''\n      && errorImgUrl === ''\n      && errorImdbUrl === ''\n      && errorImdbId === ''\n      ? '' : 'disabled';\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title</label>\n          <input\n            type=\"text\"\n            className={cn({\n              hasError: errorTitle,\n            })}\n            id=\"title\"\n            value={title}\n            onChange={this.handleSetTitle}\n            onBlur={this.hasErrorTitle}\n          />\n          {errorTitle && <span>Please enter the title</span>}\n        </div>\n\n        <div className=\"movie__description\">\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            type=\"text\"\n            id=\"description\"\n            value={description}\n            onChange={this.handleSetDescription}\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"imgUrl\">ImgUrl</label>\n          <input\n            type=\"text\"\n            className={cn({\n              hasError: errorImgUrl,\n            })}\n            id=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleSetImgUrl}\n            onBlur={this.hasErrorImgUrl}\n          />\n          {errorImgUrl && <span>Please enter correct ImgUrl</span>}\n        </div>\n\n        <div>\n          <label htmlFor=\"imdbUrl\">ImdbUrl</label>\n          <input\n            type=\"text\"\n            className={cn({\n              hasError: errorImdbUrl,\n            })}\n            id=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleSetImdbUrl}\n            onBlur={this.hasErrorimdbUrl}\n          />\n          {errorImdbUrl && <span>Please enter correct ImdbUrl</span>}\n        </div>\n\n        <div>\n          <label htmlFor=\"imdbId\">ImdbId</label>\n          <input\n            type=\"text\"\n            className={cn({\n              hasError: errorImdbId,\n            })}\n            id=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleSetImdbId}\n            onBlur={this.hasErrorImdbId}\n          />\n          {errorImdbId && <span>Please enter correct ImdbId</span>}\n        </div>\n\n        <button type=\"submit\" disabled={disableButton}>Add film</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (title, description, imgUrl, imdbUrl, imdbId) => {\n    this.setState(prev => ({\n      movies: [\n        ...prev.movies,\n        {\n          title,\n          description,\n          imgUrl,\n          imdbUrl,\n          imdbId,\n        },\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}